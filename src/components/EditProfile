// src/components/EditProfile.js
import React, { useState } from "react";
import Header from "../components/Header";
import { useToken } from "../ctx/TokenContext";
import axios from "axios";

export default function EditProfile() {
  const { token } = useToken();
  const [image, setImage] = useState(null);
  const [userData, setUserData] = useState({
    name: "Name",
    email: "example@example.com",
    role: "User",
    password: "",
  });

  const handleImageChange = (event) => {
    const file = event.target.files[0];
    if (file) {
      setImage(file);
    }
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setUserData((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    const formData = new FormData();
    formData.append("name", userData.name);
    formData.append("email", userData.email);
    if (userData.password) {
      formData.append("password", userData.password);
    }
    if (image) {
      formData.append("image", image);
    }

    try {
      const response = await axios.post(
        "http://127.0.0.1:8000/api/auth/update",
        formData,
        {
          headers: {
            Authorization: `Bearer ${token}`,
            "Content-Type": "multipart/form-data",
          },
        }
      );

      if (response.data.success) {
        alert("Profile updated successfully!");
        // Optionally, you can redirect or refresh the profile data here
      }
    } catch (error) {
      console.error("Error updating profile:", error);
      alert("Failed to update profile. Please try again.");
    }
  };

  return (
    <>
      <Header />
      <div className="max-w-4xl mx-auto mt-10 p-6 bg-white rounded-lg shadow-2xl">
        <h2 className="text-2xl font-bold text-gray-800 mb-6">Edit Profile</h2>

        {token ? (
          <form onSubmit={handleSubmit} className="flex flex-wrap">
            <div className="w-full md:w-2/3 p-4">
              <div className="mb-4">
                <label className="block font-medium text-gray-700">Name</label>
                <input
                  type="text"
                  name="name"
                  value={userData.name}
                  onChange={handleChange}
                  className="border border-gray-300 rounded-md p-2 w-full focus:border-blue-500 focus:outline-none"
                />
              </div>

              <div className="mb-4">
                <label className="block font-medium text-gray-700">Email</label>
                <input
                  type="email"
                  name="email"
                  value={userData.email}
                  onChange={handleChange}
                  className="border border-gray-300 rounded-md p-2 w-full focus:border-blue-500 focus:outline-none"
                />
              </div>

              <div className="mb-4">
                <label className="block font-medium text-gray-700">Role</label>
                <p className="text-lg text-gray-900">{userData.role}</p>
              </div>

              <div className="mb-4">
                <label className="block font-medium text-gray-700">
                  Password
                </label>
                <input
                  type="password"
                  name="password"
                  value={userData.password}
                  onChange={handleChange}
                  className="border border-gray-300 rounded-md p-2 w-full focus:border-blue-500 focus:outline-none"
                  placeholder="Leave blank to keep current password"
                />
              </div>

              <button
                type="submit"
                className="mt-6 px-4 py-2 bg-prim-green text-white font-semibold rounded-lg hover:bg-tert-blue"
              >
                Save Changes
              </button>
            </div>

            {/* Right side: Upload Image */}
            <div className="w-full md:w-1/3 p-4">
              <div className="flex flex-col items-center">
                {!image && (
                  <h2 className="text-xl font-bold m-24 p-4 border-2 border-neutral-700">
                    Upload Image
                  </h2>
                )}
                {image && (
                  <img
                    src={URL.createObjectURL(image)}
                    alt="Profile Preview"
                    className="mb-2 w-full h-auto object-cover rounded"
                  />
                )}
                <input
                  type="file"
                  id="image"
                  onChange={handleImageChange}
                  accept="image/*"
                  className="p-2 border border-gray-300 rounded mb-4"
                />
              </div>
            </div>
          </form>
        ) : (
          <p className="text-gray-500">Please log in to edit your profile.</p>
        )}
      </div>
    </>
  );
}
